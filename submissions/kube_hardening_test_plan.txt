When creating a test plan for Kubernetes I would focus on pod security policies in the beginning as to avoid as much exploit as possible on the pod level. Some aspects to enforce would be preventing privileged containers, rejecting containers that allow root execution and hardening applications in the cluster like apparmor.
For testing I would try to execute containers as root user. If the pod security has been updated to reject containers that try to execute with root access then this attack onto the cluster should fail and the pods should be safe. Alongside the test mentioned before, the developers should also use kube-bench and test the nodes on the cluster. If there are any vulnerabilities those should be addressed before moving on as to not stack more areas that an attacker can use to access the cluster.
To ensure that these changes do not negatively affect the cluster I would set up a grafana at the earliest step to help monitor the pods that are still performing at an acceptable rate. This can make testing and adding new aspects to the cluster more difficult since adding images could be harder but without that security there is a higher chance of a security breach.
